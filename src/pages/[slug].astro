---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { getTypeClass } from "../helpers";

export async function getStaticPaths() {
  const recipeEntries = await getCollection("recipes");
  return recipeEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
const { entry } = Astro.props;
const { title, type, ingredients, directions } = entry.data;

const { Content } = await entry.render();
const hasContent = Content.length > 0 ? true : false;
---

<Layout title={title}>
  <article class="has-background-white">
    <section class={`hero mb-2 ${getTypeClass(type)}`}>
      <div class="hero-body has-text-centered">
        <h1 class="title has-text-weight-normal has-text-light">
          {title}
        </h1>
        <p class="subtitle">
          <span class="tag has-background-white">{type}</span>
        </p>
      </div>
    </section>

    <div class="container mt-3 content px-1 pb-5">
      <div class="columns is-multiline is-variable is-0-mobile is-0-tablet">
        <section class="column is-one-third">
          <h2 class="title is-4 has-text-weight-normal">Ingr√©dients</h2>
          {
            ingredients.map((ingredient) => (
              <div>
                {ingredient.step && (
                  <h3 class="subtitle has-text-weight-normal is-5 mt-3 has-text-grey-dark">
                    {ingredient.step}
                  </h3>
                )}
                <ul>
                  {ingredient.list.map((list) => (
                    <li>{list}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </section>
        <hr />
        <section class="column is-two-third">
          <h2 class="title is-4 has-text-weight-normal">Instructions</h2>
          {
            directions.map((directions) => (
              <div>
                {directions.step && (
                  <h3 class="subtitle has-text-weight-normal is-5 mt-3 has-text-grey-dark">
                    {directions.step}
                  </h3>
                )}
                <ol>
                  {directions.list.map((list) => (
                    <li>{list}</li>
                  ))}
                </ol>
              </div>
            ))
          }
        </section>
      </div>
      {
        hasContent && (
          <section>
            <h2 class="title is-6">Notes</h2>
            <Content />
          </section>
        )
      }
    </div>
  </article>
</Layout>
